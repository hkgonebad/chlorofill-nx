// Based on: https://web.dev/patterns/theming/theme-switch/

// Variables adapted for Bootstrap context
$icon-fill: var(--bs-yellow);
$icon-fill-hover: var(--bs-yellow);
$icon-fill-dark: var(--bs-green);
$icon-fill-light: var(--bs-yellow);

.theme-toggle-btn {
    // Reset default button styles if needed
    padding: 0;
    cursor: pointer;
    // Add any specific size constraints if needed
    inline-size: 2rem;
    block-size: 2rem;
    display: inline-flex; // Use flex to center SVG
    justify-content: center;
    align-items: center;
    position: relative; // For potential pseudo-elements if needed

    // Default (Light mode) color
    color: var(--bs-yellow);

    &:is(:hover, :focus-visible) {
        color: var(--bs-warning); // Hover color for light mode
    }
}

.sun-and-moon {
    // Ensure SVG takes up button space if needed
    width: 100%;
    height: 100%;
}

.sun-and-moon> :is(.moon, .sun, .sun-beams) {
    transform-origin: center center;
}

.sun-and-moon> :is(.moon, .sun) {
    // Inherit color from button
    fill: currentColor;
}

.sun-and-moon>.sun-beams {
    // Inherit color from button
    stroke: currentColor;
    stroke-width: 2px;
}

// --- Theme-Specific Styles --- Adapt selector!
[data-bs-theme="dark"] {

    // Set button color for dark mode (moon)
    .theme-toggle-btn {
        color: var(--bs-cyan);

        &:is(:hover, :focus-visible) {
            color: var(--bs-info); // Hover color for dark mode
        }
    }

    .sun-and-moon>.sun {
        transform: scale(1.75);
    }

    .sun-and-moon>.sun-beams {
        opacity: 0;
    }

    .sun-and-moon>.moon>circle {
        transform: translateX(-7px);
    }
}

@supports (cx: 1) {
    [data-bs-theme="dark"] .sun-and-moon>.moon>circle {
        // Use cx for browsers that support it
        cx: 17;
        transform: translateX(0);
    }
}

// --- Animation --- 
@media (prefers-reduced-motion: no-preference) {
    .sun-and-moon>.sun {
        // Use var(--ease-elastic-3) from open-props
        transition: transform .5s var(--ease-elastic-3);
    }

    .sun-and-moon>.sun-beams {
        // Use var(--ease-elastic-4) and var(--ease-3)
        transition: transform .5s var(--ease-elastic-4), opacity .5s var(--ease-3);
    }

    .sun-and-moon .moon>circle {
        // Use var(--ease-out-5)
        transition: transform .25s var(--ease-out-5);
    }

    @supports (cx: 1) {
        .sun-and-moon .moon>circle {
            transition: cx .25s var(--ease-out-5);
        }
    }

    // Dark mode transition overrides
    [data-bs-theme="dark"] .sun-and-moon>.sun {
        transition-timing-function: var(--ease-3);
        transition-duration: .25s;
        transform: scale(1.75);
    }

    [data-bs-theme="dark"] .sun-and-moon>.sun-beams {
        transition-duration: .15s;
        transform: rotateZ(-25deg);
        opacity: 0; // Ensure opacity change is part of transition
    }

    [data-bs-theme="dark"] .sun-and-moon>.moon>circle {
        transition-duration: .5s;
        transition-delay: .25s;
    }
}